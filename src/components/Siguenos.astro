<section class="max-w-7xl mx-auto px-4 py-16">
  <h2 class="text-3xl font-bold text-center mb-12">SÃ­guenos en Instagram</h2>

  <!-- Masonry -->
  <div class="columns-1 sm:columns-2 md:columns-3 lg:columns-4 gap-4 space-y-4" id="masonry">
    
    <!-- Reel 1 -->
    <a href="./it1.png" data-link="https://www.instagram.com/reel/DDqGAtuPUnL/"
       class="thumb group block rounded-xl overflow-hidden shadow-lg relative opacity-0 translate-y-6 transition-all duration-700 break-inside-avoid cursor-pointer">
      <img src="./it1.png" alt="Reel 1" 
           class="w-full rounded-xl object-cover transition-transform duration-500 group-hover:scale-110">
      <div class="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition">
        <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M7 6v12l10-6z"/>
        </svg>
      </div>
    </a>

    <!-- Reel 2 -->
    <a href="./it2.png" data-link="https://www.instagram.com/reel/DDqGAtuPUnL/"
       class="thumb group block rounded-xl overflow-hidden shadow-lg relative opacity-0 translate-y-6 transition-all duration-700 break-inside-avoid cursor-pointer">
      <img src="./it2.png" alt="Reel 2" 
           class="w-full rounded-xl object-cover transition-transform duration-500 group-hover:scale-110">
      <div class="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition">
        <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M7 6v12l10-6z"/>
        </svg>
      </div>
    </a>

    <!-- Reel 3 -->
    <a href="./it3.png" data-link="https://www.instagram.com/reel/DDqGAtuPUnL/"
       class="thumb group block rounded-xl overflow-hidden shadow-lg relative opacity-0 translate-y-6 transition-all duration-700 break-inside-avoid cursor-pointer">
      <img src="./it3.png" alt="Reel 3" 
           class="w-full rounded-xl object-cover transition-transform duration-500 group-hover:scale-110">
      <div class="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition">
        <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M7 6v12l10-6z"/>
        </svg>
      </div>
    </a>

    <!-- Reel 4 -->
    <a href="./it4.png" data-link="https://www.instagram.com/reel/DDqGAtuPUnL/"
       class="thumb group block rounded-xl overflow-hidden shadow-lg relative opacity-0 translate-y-6 transition-all duration-700 break-inside-avoid cursor-pointer">
      <img src="./it4.png" alt="Reel 4" 
           class="w-full rounded-xl object-cover transition-transform duration-500 group-hover:scale-110">
      <div class="absolute inset-0 bg-black/40 flex items-center justify-center opacity-0 group-hover:opacity-100 transition">
        <svg class="w-12 h-12 text-white" fill="currentColor" viewBox="0 0 24 24">
          <path d="M7 6v12l10-6z"/>
        </svg>
      </div>
    </a>

  </div>
</section>

<!-- Modal -->
<div id="lightbox" class="fixed inset-0 bg-black/80 hidden items-center justify-center z-50">
  <div class="relative max-w-3xl w-full p-4">
    <button id="closeModal" class="absolute top-4 right-4 text-white text-3xl">&times;</button>
    <img id="lightboxImg" src="" alt="Preview" class="w-full rounded-xl shadow-lg">
    <div class="text-center mt-4">
      <a id="instaLink" href="#" target="_blank" class="text-white underline">Ver en Instagram</a>
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
  // ahora TypeScript sabe que son <a>
  const thumbs = document.querySelectorAll<HTMLAnchorElement>(".thumb");

  const lightbox = document.getElementById("lightbox") as HTMLDivElement;
  const lightboxImg = document.getElementById("lightboxImg") as HTMLImageElement;
  const instaLink = document.getElementById("instaLink") as HTMLAnchorElement;
  const closeModal = document.getElementById("closeModal") as HTMLButtonElement;

  // Intersection Observer
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry, index) => {
      if (entry.isIntersecting) {
        setTimeout(() => {
          entry.target.classList.remove("opacity-0", "translate-y-6");
          entry.target.classList.add("opacity-100", "translate-y-0");
        }, index * 150);
        observer.unobserve(entry.target);
      }
    });
  }, { threshold: 0.2 });

  thumbs.forEach((thumb) => observer.observe(thumb));

  // Lightbox
  thumbs.forEach((thumb) => {
    thumb.addEventListener("click", (e) => {
      e.preventDefault();
      const imgSrc = thumb.getAttribute("href");
      const igLink = thumb.dataset.link;
      if (imgSrc) lightboxImg.src = imgSrc;
      if (igLink) instaLink.href = igLink;
      lightbox.classList.remove("hidden");
      lightbox.classList.add("flex");
    });
  });

  closeModal.addEventListener("click", () => {
    lightbox.classList.add("hidden");
    lightbox.classList.remove("flex");
  });

  lightbox.addEventListener("click", (e) => {
    if (e.target === lightbox) {
      lightbox.classList.add("hidden");
      lightbox.classList.remove("flex");
    }
  });
});

</script>
